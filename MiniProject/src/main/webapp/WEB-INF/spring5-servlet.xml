<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    <!-- Specifying base package of the Components like Controller, Service,DAO -->
    <context:component-scan base-package="com" />
    <annotation-driven />
    <!-- Getting Database properties -->
    <context:property-placeholder
        location="classpath:application.properties" />

 

    <!--Specifying the Resource location to load JS, CSS, Images etc -->
    <resources mapping="/resources/**" location="/resources/" />
    <mvc:resources mapping="/resources/**" location="/resources/"
    cache-period="31556926"/>
    <!-- View Resolver -->
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/JSP/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
    <!-- DataSource -->
    <beans:bean
        class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        id="dataSource">
        <beans:property name="driverClassName"
            value="${database.driver}"></beans:property>
        <beans:property name="url"
            value="${database.url}"></beans:property>
        <beans:property name="username"
            value="${database.user}"></beans:property>
        <beans:property name="password"
            value="${database.password}"></beans:property>
    </beans:bean>
    <!-- Hibernate SessionFactory -->
    <beans:bean id="sessionFactory"
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <!-- <property name="configLocation" value="classpath:hibernate.cfg.xml" 
            /> -->
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
                <beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}
                </beans:prop>
                <beans:prop key="hibernate.format_sql">${hibernate.format_sql}
                </beans:prop>
                <beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
                <beans:prop key="hibernate.enable_lazy_load_no_trans">true</beans:prop>
            </beans:props>
        </beans:property>
        <beans:property name="packagesToScan" value="com.model"></beans:property>
    </beans:bean>

 

    <beans:bean id="transactionManager"
        class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <beans:property name="sessionFactory"
            ref="sessionFactory" />
    </beans:bean>
  <!--   <beans:bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename"
            value="classpath:messages" />
    </beans:bean>
     -->
    <beans:bean
        class="org.springframework.context.support.ResourceBundleMessageSource"
        id="messageSource">
        <beans:property name="basename" value="message" />
    </beans:bean>
   
<!--     <beans:bean id="userValidator" class="com.validator.UserValidator">  -->
<!--         </beans:bean> -->
    <tx:annotation-driven
        transaction-manager="transactionManager" />
</beans:beans>